{"version":3,"sources":["components/Header/Header.jsx","util/RestCountries.js","components/MoreInfo/MoreInfo.jsx","components/SearchBar/SearchBar.jsx","components/Country/Country.jsx","components/CountryList/CountryList.jsx","components/Home/Home.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["Header","props","style","backgroundColor","elements","to","color","text","textDecoration","onClick","switchMode","class","icon","header","RestCountries","fetch","response","ok","json","jsonResponse","map","country","id","imgSrc","flag","name","population","region","capital","callingCode","alpha3Code","console","log","url","code","MoreInfo","_isMounted","state","searchOnCode","bind","this","match","params","then","setState","window","addEventListener","className","background","padding","marginRight","src","alt","nativeName","subregion","topLevelDomain","currencies","currency","join","languages","language","borders","border","i","key","React","Component","SearchBar","dropdown","display","handleNameChange","handleSearch","handleClick","handleChoice","changeDropdownState","e","target","value","searchOnName","searchOnLoad","event","searchOnRegion","document","getElementById","innerHTML","searchCountries","onKeyPress","onChange","placeholder","type","Country","margin","CountryList","countries","Home","darkmode","lightmode","App","mode","dark","input","switchStyle","exact","path","render","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qZAIaA,G,MAAS,SAACC,GAInB,OACI,4BAAQC,MAAO,CAAEC,gBAAiBF,EAAMC,MAAME,WAC1C,kBAAC,IAAD,CAAMC,GAAG,IAAIH,MAAO,CAAEI,MAAOL,EAAMC,MAAMK,KAAMC,eAAgB,UAC3D,oDAEJ,uBAAGC,QARS,WAChBR,EAAMS,eAOuB,uBAAGC,MAAK,UAAKV,EAAMC,MAAMU,KAAjB,cAAsCX,EAAMC,MAAMW,W,uBCZlFC,G,MAAgB,WACH,OAAD,gNAGUC,MAHV,2EAGqB,CAC9BF,OAAQ,CACJ,eAAgB,mBAChB,gBAAiB,YANZ,YAGPG,EAHO,QASAC,GATA,iCAWkBD,EAASE,OAX3B,YAWHC,EAXG,kDAaEA,EAAaC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAQC,GACZC,OAAQF,EAAQG,KAChBC,KAAMJ,EAAQI,KACdC,WAAYL,EAAQK,WACpBC,OAAQN,EAAQM,OAChBC,QAASP,EAAQO,QACjBC,YAAaR,EAAQS,gBArBxB,QA0BXC,QAAQC,IAAI,mBA1BD,kDA4BbD,QAAQC,IAAR,MA5Ba,8DADZlB,EAAgB,SAgCNW,GAAO,OAAD,8HAEXQ,EAFW,oFAEwER,GAFxE,SAGMV,MAAMkB,EAAK,CAC9BpB,OAAQ,CACJ,eAAgB,mBAChB,gBAAiB,YANR,YAGXG,EAHW,QASJC,GATI,iCAWcD,EAASE,OAXvB,YAWPC,EAXO,kDAaFA,EAAaC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAQC,GACZC,OAAQF,EAAQG,KAChBC,KAAMJ,EAAQI,KACdC,WAAYL,EAAQK,WACpBC,OAAQN,EAAQM,OAChBC,QAASP,EAAQO,QACjBC,YAAaR,EAAQS,gBArBpB,QA0BfC,QAAQC,IAAI,mBA1BG,kDA4BjBD,QAAQC,IAAR,MA5BiB,6DAhChBlB,EAAgB,SA+DJa,GAAS,OAAD,8HAEfM,EAFe,sFAEsEN,GAFtE,SAGEZ,MAAMkB,EAAK,CAC9BpB,OAAQ,CACJ,eAAgB,mBAChB,gBAAiB,YANJ,YAGfG,EAHe,QASRC,GATQ,iCAWUD,EAASE,OAXnB,YAWXC,EAXW,kDAaNA,EAAaC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAQC,GACZC,OAAQF,EAAQG,KAChBC,KAAMJ,EAAQI,KACdC,WAAYL,EAAQK,WACpBC,OAAQN,EAAQM,OAChBC,QAASP,EAAQO,QACjBC,YAAaR,EAAQS,gBArBhB,QA0BnBC,QAAQC,IAAI,mBA1BO,kDA4BrBD,QAAQC,IAAR,MA5BqB,6DA/DpBlB,EAAgB,SA8FNoB,GAAO,OAAD,8HAEXD,EAFW,qFAEyEC,GAFzE,SAGMnB,MAAMkB,EAAK,CAC9BpB,OAAQ,CACJ,eAAgB,mBAChB,gBAAiB,YANR,YAGXG,EAHW,QASJC,GATI,iCAWcD,EAASE,OAXvB,UAWPC,EAXO,OAYbY,QAAQC,IAAIb,IACRA,EAbS,0CAcFA,GAdE,QAgBfY,QAAQC,IAAI,mBAhBG,kDAkBjBD,QAAQC,IAAR,MAlBiB,6DC1FhBG,EAAb,kDAEI,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IAFVmC,YAAa,EAGT,EAAKC,MAAQ,CACThB,QAAS,IAEb,EAAKiB,aAAe,EAAKA,aAAaC,KAAlB,gBALL,EAFvB,gMAYczB,EAA2B0B,KAAKvC,MAAMwC,MAAMC,OAAOR,MAAMS,MAAK,SAAAtB,GAAa,EAAKuB,SAAS,CAAEvB,QAASA,IAAYU,QAAQC,IAAI,EAAKK,MAAMhB,YAZrJ,gJAeQmB,KAAKJ,YAAa,EAClBS,OAAOC,iBAAiB,OAAQN,KAAKF,kBAhB7C,6CAmBQE,KAAKJ,YAAa,IAnB1B,2CAuBQI,KAAKF,iBAvBb,+BA2Bc,IAAD,OACL,OACI,6BAASS,UAAU,OAAO7C,MAAO,CAAEC,gBAAiBqC,KAAKvC,MAAMC,MAAM8C,aACjE,kBAAC,IAAD,CAAM3C,GAAG,KAAI,4BAAQH,MAAO,CAAEC,gBAAiBqC,KAAKvC,MAAMC,MAAME,SAAUE,MAAOkC,KAAKvC,MAAMC,MAAMK,KAAM0C,QAAS,gBAAiB,uBAAGtC,MAAM,oBAAoBT,MAAO,CAAEgD,YAAa,UAAxK,UACb,6BAASH,UAAU,YACf,4BAAQA,UAAU,QACd,yBAAKI,IAAKX,KAAKH,MAAMhB,QAAQG,KAAM4B,IAAKZ,KAAKH,MAAMhB,QAAQI,QAE/D,6BAASsB,UAAU,SACf,4BAAKP,KAAKH,MAAMhB,QAAQI,MACxB,yBAAKsB,UAAU,aACX,yBAAKA,UAAU,aACX,2BAAG,8CAA0BP,KAAKH,MAAMhB,QAAQgC,YAChD,2BAAG,6CAAyBb,KAAKH,MAAMhB,QAAQK,YAC/C,2BAAG,yCAAqBc,KAAKH,MAAMhB,QAAQM,QAC3C,2BAAG,6CAAyBa,KAAKH,MAAMhB,QAAQiC,WAC/C,2BAAG,0CAAsBd,KAAKH,MAAMhB,QAAQO,UAEhD,yBAAKmB,UAAU,cACX,2BAAG,mDAA+BP,KAAKH,MAAMhB,QAAQkC,gBACpDf,KAAKH,MAAMhB,QAAQmC,YAAc,2BAAG,6CAAyBhB,KAAKH,MAAMhB,QAAQmC,WAAWpC,KAAI,SAAAqC,GAAQ,OAAIA,EAAShC,QAAMiC,KAAK,OAC/HlB,KAAKH,MAAMhB,QAAQsC,WAAa,2BAAG,4CAAwBnB,KAAKH,MAAMhB,QAAQsC,UAAUvC,KAAI,SAAAwC,GAAQ,OAAIA,EAASnC,QAAMiC,KAAK,SAGpIlB,KAAKH,MAAMhB,QAAQwC,SAAW,yBAAKd,UAAU,mBAC1C,mDAD2B,IACKP,KAAKH,MAAMhB,QAAQwC,QAAQzC,KAAI,SAAC0C,EAAQC,GAAT,OAAe,kBAAC,IAAD,CAAM1D,GAAI,aAAeyD,EAAQE,IAAK,UAAYD,GAAI,4BAAQ7D,MAAO,CAAEC,gBAAiB,EAAKF,MAAMC,MAAME,SAAUE,MAAO,EAAKL,MAAMC,MAAMK,MAAQE,QAAS,EAAK6B,cAAewB,eApD1R,GAA8BG,IAAMC,WCFvBC,G,YAAb,kDACI,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IACDoC,MAAQ,CACT+B,UAAU,EACVC,QAAS,OACT5C,KAAM,GACNE,OAAQ,IAEZ,EAAK2C,iBAAmB,EAAKA,iBAAiB/B,KAAtB,gBACxB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBACpB,EAAKiC,YAAc,EAAKA,YAAYjC,KAAjB,gBACnB,EAAKkC,aAAe,EAAKA,aAAalC,KAAlB,gBACpB,EAAKmC,oBAAsB,EAAKA,oBAAoBnC,KAAzB,gBAZZ,EADvB,6DAgBqBoC,GACbnC,KAAKI,SAAS,CAAEnB,KAAMkD,EAAEC,OAAOC,QAC/BrC,KAAKvC,MAAM6E,aAAaH,EAAEC,OAAOC,OAC5BF,EAAEC,OAAOC,OACVrC,KAAKvC,MAAM8E,iBApBvB,6CAyBoC,IAAxBvC,KAAKH,MAAM+B,SACX5B,KAAKI,SAAS,CAAEyB,QAAS,SAEzB7B,KAAKI,SAAS,CAAEyB,QAAS,YA5BrC,oCAiCQ7B,KAAKI,SAAS,CAAEwB,UAAW5B,KAAKH,MAAM+B,WACtC5B,KAAKkC,wBAlCb,mCAqCiBM,GACTxC,KAAKI,SAAS,CAAEjB,OAAQqD,EAAMJ,OAAOtD,KACrCkB,KAAKvC,MAAMgF,eAAeD,EAAMJ,OAAOtD,IACvC4D,SAASC,eAAe,iBAAiBC,UAAYJ,EAAMJ,OAAOQ,YAxC1E,qCA6CQ5C,KAAKvC,MAAMoF,gBAAgB7C,KAAKH,MAAMZ,KAAMe,KAAKH,MAAMV,UA7C/D,+BAgDc,IAAD,OACL,OACI,yBAAKoB,UAAU,YAAYuC,WAAY,SAACX,GAAsB,UAAVA,EAAEX,KAAmB,EAAKO,iBAC1E,yBAAKxB,UAAU,SAAS7C,MAAO,CAAEC,gBAAiBqC,KAAKvC,MAAMC,MAAME,SAAUE,MAAOkC,KAAKvC,MAAMC,MAAMK,OACjG,uBAAGwC,UAAU,kBACb,2BAAO7C,MAAO,CAAEC,gBAAiBqC,KAAKvC,MAAMC,MAAME,SAAUE,MAAOkC,KAAKvC,MAAMC,MAAMK,MAAQsE,MAAOrC,KAAKH,MAAMZ,KAAM8D,SAAU/C,KAAK8B,iBAAkBkB,YAAY,0BAA0BC,KAAK,YAEpM,yBAAKhF,QAAS+B,KAAKgC,YAAazB,UAAU,mBAAmBzB,GAAG,aAC5D,yBAAKpB,MAAO,CAAEC,gBAAiBqC,KAAKvC,MAAMC,MAAME,SAAUE,MAAOkC,KAAKvC,MAAMC,MAAMK,MAAQwC,UAAU,WAAWzB,GAAG,YAC9G,2BAAG,0BAAMA,GAAG,iBAAT,oBAAgD,uBAAGyB,UAAU,0BAEpE,wBAAI7C,MAAO,CAAEmE,QAAS7B,KAAKH,MAAMgC,QAASlE,gBAAiBqC,KAAKvC,MAAMC,MAAME,SAAUE,MAAOkC,KAAKvC,MAAMC,MAAMK,MAAQE,QAAS+B,KAAKiC,aAAc1B,UAAU,cAAczB,GAAG,eACzK,wBAAIA,GAAG,YAAP,WACA,wBAAIA,GAAG,UAAP,UACA,wBAAIA,GAAG,QAAP,QACA,wBAAIA,GAAG,UAAP,UACA,wBAAIA,GAAG,WAAP,kBAhExB,GAA+B2C,IAAMC,YCCxBwB,G,MAAU,SAAAzF,GACnB,OAEI,kBAAC,IAAD,CAAMC,MAAO,CAAEM,eAAgB,OAAQmF,OAAQ,QAAUtF,GAAI,aAAeJ,EAAMoB,QAAQI,KAAO,IAAMxB,EAAMoB,QAAQQ,aACjH,yBAAKkB,UAAU,UAAU7C,MAAO,CAAEC,gBAAiBF,EAAMC,MAAME,SAAUE,MAAOL,EAAMC,MAAMK,OACxF,4BAAQwC,UAAU,SACd,yBAAKI,IAAKlD,EAAMoB,QAAQE,OAAQ6B,IAAKnD,EAAMoB,QAAQI,QAEvD,yBAAKsB,UAAU,gBACX,4BAAK9C,EAAMoB,QAAQI,MACnB,2BAAG,6CAAyBxB,EAAMoB,QAAQK,YAC1C,2BAAG,yCAAqBzB,EAAMoB,QAAQM,QACtC,2BAAG,0CAAsB1B,EAAMoB,QAAQO,cCX9CgE,EAAc,SAAA3F,GACvB,OACI,6BAAS8C,UAAU,eACf,kBAAC,EAAD,CAAW7C,MAAOD,EAAMC,MAAO6E,aAAc9E,EAAM8E,aAAcD,aAAc7E,EAAM6E,aAAcG,eAAgBhF,EAAMgF,iBACzH,6BAASlC,UAAU,gBACd9C,EAAM4F,WAAa5F,EAAM4F,UAAUzE,KAAI,SAACC,EAAS0C,GAAV,OAAgB,kBAAC,EAAD,CAASC,IAAK,WAAaD,EAAG7D,MAAOD,EAAMC,MAAOmB,QAASA,UCNtHyE,EAAb,kDAEI,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAFVmC,YAAa,EAGT,EAAKC,MAAQ,CACTwD,UAAW,IAEf,EAAKd,aAAe,EAAKA,aAAaxC,KAAlB,gBACpB,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAK0C,eAAiB,EAAKA,eAAe1C,KAApB,gBAPP,EAFvB,gLAaQzB,IAA6B6B,MAAK,SAAAkD,GAAS,OAAI,EAAKjD,SAAS,CAAEiD,UAAWA,OAblF,6KAeuBpE,GAfvB,4EAgBQX,EAA2BW,GAAMkB,MAAK,SAAAkD,GAAS,OAAI,EAAKjD,SAAS,CAAEiD,UAAWA,OAhBtF,gLAkByBlE,GAlBzB,4EAmBQb,EAA6Ba,GAAQgB,MAAK,SAAAkD,GAAS,OAAI,EAAKjD,SAAS,CAAEiD,UAAWA,OAnB1F,4IAsBQrD,KAAKJ,YAAa,EAClBI,KAAKuC,iBAvBb,6CA0BQvC,KAAKJ,YAAa,IA1B1B,+BA6BQ,OACI,yBAAKW,UAAU,QACX,kBAAC,EAAD,CAAa7C,MAAOsC,KAAKvC,MAAMC,MAAO6E,aAAcvC,KAAKuC,aAAcD,aAActC,KAAKsC,aAAcG,eAAgBzC,KAAKyC,eAAgBY,UAAWrD,KAAKH,MAAMwD,iBA/BnL,GAA0B5B,IAAMC,W,OCG5B6B,EACM,YADNA,EAEI,MAFJA,EAGK,mBAHLA,EAIK,QAJLA,EAKU,qBALVA,EAMQ,qBAGRC,EACM,aADNA,EAEI,MAFJA,EAGK,oBAHLA,EAIK,kBAJLA,EAKU,kBALVA,EAMQ,kBAoEGC,E,kDAhEb,WAAYhG,GAAQ,IAAD,8BACjB,cAAMA,IACDoC,MAAQ,CACX6D,KAAM,CACJC,MAAM,GAERjG,MAAO,CACLW,OAAQkF,EACRnF,KAAMmF,EACNxF,KAAMwF,EACNK,MAAOL,EACP/C,WAAY+C,EACZ3F,SAAU2F,IAGd,EAAKrF,WAAa,EAAKA,WAAW6B,KAAhB,gBAClB,EAAK8D,YAAc,EAAKA,YAAY9D,KAAjB,gBAhBF,E,yDAoBjBC,KAAKI,SAAS,CAAEsD,KAAM,CAAEC,MAAO3D,KAAKH,MAAM6D,KAAKC,U,oCAI/C3D,KAAK9B,aACL8B,KAAKH,MAAM6D,KAAKC,KAAO3D,KAAKI,SAAS,CACnC1C,MAAO,CACLW,OAAQmF,EACRpF,KAAMoF,EACNzF,KAAMyF,EACNI,MAAOJ,EACPhD,WAAYgD,EACZ5F,SAAU4F,KAETxD,KAAKI,SAAS,CACjB1C,MAAO,CACLW,OAAQkF,EACRnF,KAAMmF,EACNxF,KAAMwF,EACNK,MAAOL,EACP/C,WAAY+C,EACZ3F,SAAU2F,O,+BAKN,IAAD,OACP,OACE,yBAAKhD,UAAU,MAAM7C,MAAO,CAAEC,gBAAiBqC,KAAKH,MAAMnC,MAAM8C,WAAY1C,MAAOkC,KAAKH,MAAMnC,MAAMK,OAClG,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQL,MAAOsC,KAAKH,MAAMnC,MAAOQ,WAAY8B,KAAK6D,cAElD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAUA,EAAV,CAAiBC,MAAO,EAAKmC,MAAMnC,YAC5E,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,wBAAwBC,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAqBC,MAAO,EAAKmC,MAAMnC,YACpG,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,SAACvG,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAqBC,MAAO,EAAKmC,MAAMnC,mB,GAxDxF+D,IAAMC,WCbJuC,QACW,cAA7B5D,OAAO6D,SAASC,UAEa,UAA7B9D,OAAO6D,SAASC,UAEhB9D,OAAO6D,SAASC,SAASlE,MACvB,2DCZJmE,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAASC,eAAe,SDyHpB,kBAAmB2B,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrF,QAAQqF,MAAMA,EAAMC,c","file":"static/js/main.1e708694.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport const Header = (props) => {\r\n    const handleClick = () => {\r\n        props.switchMode()\r\n    }\r\n    return (\r\n        <header style={{ backgroundColor: props.style.elements }}>\r\n            <Link to='/' style={{ color: props.style.text, textDecoration: \" none\" }}>\r\n                <h2>Where in the world?</h2>\r\n            </Link>\r\n            <p onClick={handleClick}><i class={`${props.style.icon} fa-moon`}></i>{props.style.header}</p>\r\n        </header>\r\n    )\r\n}\r\n","\r\nexport const RestCountries = {\r\n    async searchOnLoad() {\r\n        try {\r\n            const url = `https://cors-anywhere.herokuapp.com/https://restcountries.eu/rest/v2/all`;\r\n            const response = await fetch(url, {\r\n                header: {\r\n                    'Content-Type': 'application/json',\r\n                    'Cache-Control': 'public'\r\n                }\r\n            });\r\n            if (response.ok) {\r\n\r\n                const jsonResponse = await response.json();\r\n                if (jsonResponse) {\r\n                    return jsonResponse.map(country => {\r\n                        return {\r\n                            id: country.id,\r\n                            imgSrc: country.flag,\r\n                            name: country.name,\r\n                            population: country.population,\r\n                            region: country.region,\r\n                            capital: country.capital,\r\n                            callingCode: country.alpha3Code\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n            } console.log('Request Failed!')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    async searchOnName(name) {\r\n        try {\r\n            const url = `https://cors-anywhere.herokuapp.com/https://restcountries.eu/rest/v2/name/${name}`;\r\n            const response = await fetch(url, {\r\n                header: {\r\n                    'Content-Type': 'application/json',\r\n                    'Cache-Control': 'public'\r\n                }\r\n            });\r\n            if (response.ok) {\r\n\r\n                const jsonResponse = await response.json();\r\n                if (jsonResponse) {\r\n                    return jsonResponse.map(country => {\r\n                        return {\r\n                            id: country.id,\r\n                            imgSrc: country.flag,\r\n                            name: country.name,\r\n                            population: country.population,\r\n                            region: country.region,\r\n                            capital: country.capital,\r\n                            callingCode: country.alpha3Code\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n            } console.log('Request Failed!')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    async searchOnRegion(region) {\r\n        try {\r\n            const url = `https://cors-anywhere.herokuapp.com/https://restcountries.eu/rest/v2/region/${region}`;\r\n            const response = await fetch(url, {\r\n                header: {\r\n                    'Content-Type': 'application/json',\r\n                    'Cache-Control': 'public'\r\n                }\r\n            });\r\n            if (response.ok) {\r\n\r\n                const jsonResponse = await response.json();\r\n                if (jsonResponse) {\r\n                    return jsonResponse.map(country => {\r\n                        return {\r\n                            id: country.id,\r\n                            imgSrc: country.flag,\r\n                            name: country.name,\r\n                            population: country.population,\r\n                            region: country.region,\r\n                            capital: country.capital,\r\n                            callingCode: country.alpha3Code\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n            } console.log('Request Failed!')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    async searchOnCode(code) {\r\n        try {\r\n            const url = `https://cors-anywhere.herokuapp.com/https://restcountries.eu/rest/v2/alpha/${code}`;\r\n            const response = await fetch(url, {\r\n                header: {\r\n                    'Content-Type': 'application/json',\r\n                    'Cache-Control': 'public'\r\n                }\r\n            });\r\n            if (response.ok) {\r\n\r\n                const jsonResponse = await response.json();\r\n                console.log(jsonResponse)\r\n                if (jsonResponse) {\r\n                    return jsonResponse;\r\n                }\r\n            } console.log('Request Failed!')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport './MoreInfo.css';\r\nimport { RestCountries } from '../../util/RestCountries';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MoreInfo extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            country: {}\r\n        };\r\n        this.searchOnCode = this.searchOnCode.bind(this);\r\n        // this.onClick = this.onClick.bind(this);\r\n        // this.componentWillUpdate = this.componentWillUpdate.bind(this);\r\n    }\r\n    async searchOnCode() {\r\n        await RestCountries.searchOnCode(this.props.match.params.code).then(country => { this.setState({ country: country }); console.log(this.state.country) })\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        window.addEventListener('load', this.searchOnCode());\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.searchOnCode();\r\n        // window.removeEventListener('load', this.searchOnCode())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"Main\" style={{ backgroundColor: this.props.style.background }}>\r\n                <Link to='/'><button style={{ backgroundColor: this.props.style.elements, color: this.props.style.text, padding: '1.5rem 3rem' }}><i class='fas fa-arrow-left' style={{ marginRight: '1rem' }}></i> Back</button></Link>\r\n                <section className='MoreInfo'>\r\n                    <figure className='left'>\r\n                        <img src={this.state.country.flag} alt={this.state.country.name} />\r\n                    </figure>\r\n                    <section className='right'>\r\n                        <h1>{this.state.country.name}</h1>\r\n                        <div className='container'>\r\n                            <div className='innerLeft'>\r\n                                <p><span>Native Name:</span>{this.state.country.nativeName}</p>\r\n                                <p><span>Population:</span>{this.state.country.population}</p>\r\n                                <p><span>Region:</span>{this.state.country.region}</p>\r\n                                <p><span>Sub Region:</span>{this.state.country.subregion}</p>\r\n                                <p><span>Capital:</span>{this.state.country.capital}</p>\r\n                            </div>\r\n                            <div className='innerRight'>\r\n                                <p><span>Top Level Domain:</span>{this.state.country.topLevelDomain}</p>\r\n                                {this.state.country.currencies && <p><span>Currencies:</span>{this.state.country.currencies.map(currency => currency.name).join(', ')}</p>}\r\n                                {this.state.country.languages && <p><span>Languages:</span>{this.state.country.languages.map(language => language.name).join(', ')}</p>}\r\n                            </div>\r\n                        </div>\r\n                        {this.state.country.borders && <div className='borderCountries'>\r\n                            <span>Border Countries:</span> {this.state.country.borders.map((border, i) => <Link to={'/MoreInfo/' + border} key={'border_' + i} ><button style={{ backgroundColor: this.props.style.elements, color: this.props.style.text }} onClick={this.searchOnCode}>{border}</button></Link>)}\r\n                        </div>}\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdown: false,\r\n            display: \"none\",\r\n            name: '',\r\n            region: ''\r\n        };\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChoice = this.handleChoice.bind(this);\r\n        this.changeDropdownState = this.changeDropdownState.bind(this);\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.setState({ name: e.target.value });\r\n        this.props.searchOnName(e.target.value);\r\n        if (!e.target.value) {\r\n            this.props.searchOnLoad();\r\n        }\r\n    }\r\n\r\n    changeDropdownState() {\r\n        if (this.state.dropdown === false) {\r\n            this.setState({ display: \"none\" });\r\n        } else {\r\n            this.setState({ display: \"block\" });\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({ dropdown: !this.state.dropdown });\r\n        this.changeDropdownState();\r\n    };\r\n\r\n    handleChoice(event) {\r\n        this.setState({ region: event.target.id });\r\n        this.props.searchOnRegion(event.target.id);\r\n        document.getElementById(\"text-box text\").innerHTML = event.target.innerHTML;\r\n\r\n    };\r\n\r\n    handleSearch() {\r\n        this.props.searchCountries(this.state.name, this.state.region);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\" onKeyPress={(e) => { if (e.key === 'Enter') { this.handleSearch() } }}>\r\n                <div className=\" input\" style={{ backgroundColor: this.props.style.elements, color: this.props.style.text }}>\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <input style={{ backgroundColor: this.props.style.elements, color: this.props.style.text }} value={this.state.name} onChange={this.handleNameChange} placeholder='Search for a country...' type=\"search\" />\r\n                </div>\r\n                <div onClick={this.handleClick} className=\"select-container\" id=\"container\">\r\n                    <div style={{ backgroundColor: this.props.style.elements, color: this.props.style.text }} className=\"text-box\" id=\"text-box\">\r\n                        <p><span id=\"text-box text\">Filter By Region</span><i className=\"fas fa-chevron-down\"></i></p>\r\n                    </div>\r\n                    <ul style={{ display: this.state.display, backgroundColor: this.props.style.elements, color: this.props.style.text }} onClick={this.handleChoice} className=\"options-box\" id=\"options-box\">\r\n                        <li id=\"americas\">America</li>\r\n                        <li id=\"africa\">Africa</li>\r\n                        <li id=\"asia\">Asia</li>\r\n                        <li id=\"europe\">Europe</li>\r\n                        <li id=\"oceania\">Oceania</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Country.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Country = props => {\r\n    return (\r\n\r\n        <Link style={{ textDecoration: 'none', margin: '3rem' }} to={'/MoreInfo/' + props.country.name + '/' + props.country.callingCode}>\r\n            <div className='Country' style={{ backgroundColor: props.style.elements, color: props.style.text }}>\r\n                <figure className='image'>\r\n                    <img src={props.country.imgSrc} alt={props.country.name} />\r\n                </figure>\r\n                <div className=\"Country-text\" >\r\n                    <h2>{props.country.name}</h2>\r\n                    <p><span>Population:</span>{props.country.population}</p>\r\n                    <p><span>Region:</span>{props.country.region}</p>\r\n                    <p><span>Capital:</span>{props.country.capital}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './CountryList.css';\r\nimport { SearchBar } from '../SearchBar/SearchBar.jsx';\r\nimport { Country } from '../Country/Country.jsx';\r\n\r\nexport const CountryList = props => {\r\n    return (\r\n        <section className='CountryList'>\r\n            <SearchBar style={props.style} searchOnLoad={props.searchOnLoad} searchOnName={props.searchOnName} searchOnRegion={props.searchOnRegion} />\r\n            <section className='List-section' >\r\n                {props.countries && props.countries.map((country, i) => <Country key={'country_' + i} style={props.style} country={country} />)}\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { CountryList } from '../CountryList/CountryList.jsx';\r\nimport { RestCountries } from '../../util/RestCountries';\r\n\r\nexport class Home extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countries: []\r\n        };\r\n        this.searchOnLoad = this.searchOnLoad.bind(this);\r\n        this.searchOnName = this.searchOnName.bind(this);\r\n        this.searchOnRegion = this.searchOnRegion.bind(this);\r\n    }\r\n\r\n    async searchOnLoad() {\r\n        RestCountries.searchOnLoad().then(countries => this.setState({ countries: countries }))\r\n    }\r\n    async searchOnName(name) {\r\n        RestCountries.searchOnName(name).then(countries => this.setState({ countries: countries }))\r\n    }\r\n    async searchOnRegion(region) {\r\n        RestCountries.searchOnRegion(region).then(countries => this.setState({ countries: countries }))\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.searchOnLoad();\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='Home'>\r\n                <CountryList style={this.props.style} searchOnLoad={this.searchOnLoad} searchOnName={this.searchOnName} searchOnRegion={this.searchOnRegion} countries={this.state.countries} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { Header } from '../Header/Header.jsx';\nimport { MoreInfo } from '../MoreInfo/MoreInfo.jsx';\nimport { Home } from '../Home/Home.jsx';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nlet darkmode = {\n  header: 'Dark Mode',\n  icon: 'fas',\n  color: 'hsl(0, 0%, 100%)',\n  input: 'white',\n  background: 'hsl(207, 26%, 17%)',\n  elements: 'hsl(209, 23%, 22%)'\n}\n\nlet lightmode = {\n  header: 'Light Mode',\n  icon: 'far',\n  color: 'hsl(200, 15%, 8%)',\n  input: 'hsl(0, 0%, 52%)',\n  background: 'hsl(0, 0%, 90%)',\n  elements: 'hsl(0, 0%, 95%)'\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: {\n        dark: true\n      },\n      style: {\n        header: darkmode.header,\n        icon: darkmode.icon,\n        text: darkmode.color,\n        input: darkmode.input,\n        background: darkmode.background,\n        elements: darkmode.elements\n      }\n    };\n    this.switchMode = this.switchMode.bind(this);\n    this.switchStyle = this.switchStyle.bind(this);\n  }\n\n  switchMode() {\n    this.setState({ mode: { dark: !this.state.mode.dark } })\n  }\n\n  switchStyle() {\n    this.switchMode()\n    this.state.mode.dark ? this.setState({\n      style: {\n        header: lightmode.header,\n        icon: lightmode.icon,\n        text: lightmode.color,\n        input: lightmode.input,\n        background: lightmode.background,\n        elements: lightmode.elements\n      }\n    }) : this.setState({\n      style: {\n        header: darkmode.header,\n        icon: darkmode.icon,\n        text: darkmode.color,\n        input: darkmode.input,\n        background: darkmode.background,\n        elements: darkmode.elements\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className='App' style={{ backgroundColor: this.state.style.background, color: this.state.style.text }}>\n        <Router>\n          <Header style={this.state.style} switchMode={this.switchStyle} />\n\n          <Switch>\n            <Route exact path='/' render={(props) => <Home {...props} style={this.state.style} />} />\n            <Route exact path='/MoreInfo/:name/:code' render={(props) => <MoreInfo {...props} style={this.state.style} />} />\n            <Route exact path='/MoreInfo/:code' render={(props) => <MoreInfo {...props} style={this.state.style} />} />\n\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}